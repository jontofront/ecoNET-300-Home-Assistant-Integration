name: üÜï New Sensor Feature Request
description: Request a new sensor, binary sensor, or switch to be added to the ecoNET-300 integration
title: "[NEW SENSOR] "
labels: ["enhancement", "sensor", "feature-request"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        ## üÜï New Sensor Feature Request

        Use this template to request new sensors, binary sensors, switches, or other entities to be added to the ecoNET-300 Home Assistant integration.

        **Before submitting:**
        - Verify the sensor is supported by your ecoNET device model
        - Check the [cloud translations reference](https://github.com/jontofront/ecoNET-300-Home-Assistant-Integration/blob/master/docs/cloud_translations/MANUAL_TRANSLATION_REFERENCE.md) for existing translations

  - type: dropdown
    id: device_model
    attributes:
      label: "Device Model"
      description: "What ecoNET device model do you have?"
      options:
        - "ecoMAX810P-L"
        - "ecoSOL500"
        - "ecoMAX360"
        - "ecoMAX850R2-X"
        - "ecoMAX860P2-N"
        - "ecoMAX860P3-V"
        - "ecoSOL"
        - "SControl MK1"
        - "Other (please specify)"

  - type: input
    id: device_model_other
    attributes:
      label: "Other Device Model"
      description: "Please specify your ecoNET device model"
      placeholder: "e.g., ecoMAX900P, ecoSOL300"
    validations:
      required: false

  - type: input
    id: sensor_name
    attributes:
      label: "Sensor Name"
      description: "What should this sensor be called? Use clear, descriptive names that will be translated into multiple languages. Check existing translations to maintain consistency."
      placeholder: "e.g., Boiler Temperature, Pump Status, System Pressure"

  - type: markdown
    attributes:
      value: |
        **üåê Translation Guidelines:**

        - **Check existing names**: Browse [current translations](https://github.com/jontofront/ecoNET-300-Home-Assistant-Integration/blob/master/custom_components/econet300/translations/en.json) to see naming patterns
        - **Cloud translations**: Check [official ecoNET translations](https://github.com/jontofront/ecoNET-300-Home-Assistant-Integration/blob/master/docs/cloud_translations/MANUAL_TRANSLATION_REFERENCE.md) for your parameter
        - **Naming convention**: Use descriptive names like "Boiler Temperature" not "temp1"
        - **Language support**: Names will be translated to English, Polish, and other languages

  - type: dropdown
    id: entity_type
    attributes:
      label: "Entity Type"
      description: "What type of entity is this?"
      options:
        - "sensor"
        - "binary_sensor"
        - "switch"
        - "number"
        - "select"
        - "climate"
        - "other"

  - type: input
    id: api_parameter
    attributes:
      label: "API Parameter Name"
      description: "What is the exact parameter name from the ecoNET API? This is the key name that appears in the API response JSON. Check the API documentation or use the test endpoints to find the correct parameter name."
      placeholder: "e.g., tempCO, statusPump, powerBoiler, pressureSystem"

  - type: markdown
    attributes:
      value: |
        **üí° Need help finding the API parameter?**

        - **API Documentation**: Check the [API V1 Documentation](https://github.com/jontofront/ecoNET-300-Home-Assistant-Integration/blob/master/docs/API_V1_DOCUMENTATION.md)
        - **Test Endpoints**: Use the [test script](https://github.com/jontofront/ecoNET-300-Home-Assistant-Integration/blob/master/scripts/test_api_endpoints.py) to explore your device's API
        - **Device Parameters**: See [device-specific documentation](https://github.com/jontofront/ecoNET-300-Home-Assistant-Integration/tree/master/docs/devices) for your model
        - **Cloud Translations**: Check [existing parameters](https://github.com/jontofront/ecoNET-300-Home-Assistant-Integration/blob/master/docs/cloud_translations/MANUAL_TRANSLATION_REFERENCE.md) to avoid duplicates

  - type: dropdown
    id: data_type
    attributes:
      label: "Data Type"
      description: "What type of data does this sensor provide?"
      options:
        - "temperature"
        - "pressure"
        - "percentage"
        - "power"
        - "energy"
        - "time"
        - "status"
        - "boolean"
        - "numeric"
        - "other"

  - type: input
    id: unit_of_measurement
    attributes:
      label: "Unit of Measurement"
      description: "What unit should be displayed? (e.g., '¬∞C', 'bar', '%', 'W')"
      placeholder: "¬∞C"

  - type: dropdown
    id: device_class
    attributes:
      label: "Device Class"
      description: "What device class should be used? (Leave empty if unsure)"
      options:
        - "temperature"
        - "pressure"
        - "power"
        - "energy"
        - "frequency"
        - "signal_strength"
        - "battery"
        - "humidity"
        - "illuminance"
        - "motion"
        - "opening"
        - "presence"
        - "smoke"
        - "sound"
        - "vibration"
        - "connectivity"
        - "gas"
        - "moisture"

  - type: textarea
    id: description
    attributes:
      label: "Description"
      description: "Describe what this sensor measures and why it would be useful"
      placeholder: "This sensor measures the boiler temperature and is essential for monitoring heating system performance..."

  - type: textarea
    id: use_case
    attributes:
      label: "Use Case"
      description: "How would you use this sensor? (e.g., automations, dashboards, monitoring)"
      placeholder: "I want to create automations based on boiler temperature and display it on my heating dashboard..."

  - type: textarea
    id: additional_info
    attributes:
      label: "Additional Information"
      description: "Any other relevant information, screenshots, or documentation references"
      placeholder: "I found this parameter in the API documentation at... or I can see this value in the ecoNET app..."

  - type: checkboxes
    id: terms
    attributes:
      label: "Terms"
      description: "By submitting this issue, you agree to:"
      options:
        - label: "I have checked that this sensor doesn't already exist in the integration"
        - label: "I understand this is a feature request and may not be implemented immediately"
        - label: "I can provide additional information or testing if needed"
        - label: "I have verified this sensor is supported by my device model"
